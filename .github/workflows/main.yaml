name: Building and Pushing to MCR
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
permissions:
  id-token: write
  contents: read

jobs: 
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        driver_version: ["470.57.02", "510.47.03"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: 'Azure CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Build and Push'
        run: |
          set -x
          TAG="${{ matrix.driver_version }}-$(date -Iseconds | cut -c-19 | tr : - | tr -d '-')-sha-${GITHUB_SHA:0:6}"
          echo "tag is: "
          echo $TAG
          docker buildx build --build-arg DRIVER_VERSION=${{ matrix.driver_version }} --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --output=type=docker -t ${{ secrets.AZURE_REGISTRY_SERVER }}/public/aks/aks-gpu:$TAG .
          az acr login -n ${{ secrets.AZURE_REGISTRY_SERVER }}
          docker images
          # docker push ${{ secrets.AZURE_REGISTRY_SERVER }}/public/aks/aks-gpu:$TAG
          echo "acr push done"
      - name: Move cache
        run: |
          rm -r /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache